[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\nPseudobulk and related approaches for scRNA-seq analysis\n\n\n\nAudience\nComputational skills required\nDuration\n\n\n\n\nBiologists\nIntroduction to R\n3-session online workshop (~7.5 hours of trainer-led time)\n\n\n\n\nDescription\nThis repository has teaching materials for a hands-on workshop on Pseudobulk and related approaches for scRNA-seq analysis. After clustering cells as part of a single-cell RNA-seq experiment, investigators are often interested in carrying out a differential expression analysis between conditions within certain cell types. When the experimental design includes replicates with multiple conditions there is power in identifying differentially expressed genes using a pseudobulk approach. This workshop will:\n\nDiscuss various approaches for differential expression using single cell RNA-seq data\nPrepare single-cell RNA-seq raw count data for pseudobulk analysis\nPerform differential expression analysis on pseudobulk counts using DESeq2\nPresent approaches for evaluating differential proportions of cells between conditions\n\nWorking knowledge of R is required or completion of the Introduction to R workshop.\n\n\n\nNote for Trainers:\nPlease note that the schedule linked below assumes that learners will spend between 3-4 hours on reading through, and completing exercises from selected lessons between classes. The online component of the workshop focuses on more exercises and discussion/Q & A.\n\n\n\n\n\n\n\nNote\n\n\n\nThese materials were developed for a trainer-led workshop, but are also amenable to self-guided learning.\n\n\n\nLearning Objectives\n\nUnderstanding considerations for when to use different DGE algorithms on scRNA-seq data\nUsing FindMarkers to evaluate significantly DE genes\nAggregating single cell expression data into a pseudobulk counts matrix to run a DESeq2 workflow\nEvaluating expression patterns of differentially expressed genes at the pseudobulk and single cell level\nApplication of methods for evaluating differential proportions of cells between conditions\n\n\n\nLessons\n\nWorkshop schedule (trainer-led learning)\nSelf-learning\n\n\n\nInstallation Requirements\n\nApplications\nDownload the most recent versions of R and RStudio for your laptop:\n\nR (version 4.0.0 or above)\nRStudio\n\n\n\nPackages for R\n\nNote 1: Install the packages in the order listed below.\n\n\nNote 2:  All the package names listed below are case sensitive!\n\n\nNote 3: If you have a Mac, download and install this tool before intalling your packages: https://mac.r-project.org/tools/gfortran-12.2-universal.pkg\n\n\nNote 4: At any point (especially if you’ve used R/Bioconductor in the past), in the console R may ask you if you want to update any old packages by asking Update all/some/none? [a/s/n]:. If you see this, type “a” at the prompt and hit Enter to update any old packages. Updating packages can sometimes take quite a bit of time to run, so please account for that before you start with these installations.\n\n\nNote 5: If you see a message in your console along the lines of “binary version available but the source version is later”, followed by a question, “Do you want to install from sources the package which needs compilation? y/n”, type n for no, and hit enter.\n\n(1) Install the 8 packages listed below from Bioconductor using the the BiocManager::install() function.\n\nBiocManager::install(\"DESeq2\")\nBiocManager::install(\"EnhancedVolcano\")\nBiocManager::install(\"SingleCellExperiment\")\nBiocManager::install(\"miloR\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Mm.eg.db\")\nBiocManager::install(\"sccomp\")\nBiocManager::install(\"speckle\")\n\nPlease install them one-by-one as follows:\n\nBiocManager::install(\"DESeq2\")\nBiocManager::install(\"EnhancedVolcano\")\n& so on ...\n\n(2) Install the 9 packages listed below from CRAN using the install.packages() function.\n\ninstall.packages(\"Seurat\")\ninstall.packages(\"tidyverse\")\ninstall.packages(\"pheatmap\")\ninstall.packages(\"RColorBrewer\")\ninstall.packages(\"cowplot\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"ggalluvial\")\ninstall.packages(\"msigdbr\")\ninstall.packages(\"ggvenn\")\n\nPlease install them one-by-one as follows:\n\ninstall.packages(\"Seurat\")\ninstall.packages(\"tidyverse\")\ninstall.packages(\"pheatmap\")\n& so on ...\n\n(3) Finally, please check that all the packages were installed successfully by loading them one at a time using the library() function.\n\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(pheatmap)\nlibrary(RColorBrewer)\nlibrary(cowplot)\nlibrary(dplyr)\nlibrary(DESeq2)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(miloR)\nlibrary(ggalluvial)\nlibrary(clusterProfiler)\nlibrary(org.Mm.eg.db)\nlibrary(msigdbr)\nlibrary(ggvenn)\nlibrary(sccomp)\nlibrary(speckle)\n\n(4) Once all packages have been loaded, run sessionInfo().\n\nsessionInfo()"
  },
  {
    "objectID": "lessons/01_setup_intro_dataset.html",
    "href": "lessons/01_setup_intro_dataset.html",
    "title": "Project Setup and Data Exploration",
    "section": "",
    "text": "Introduce the dataset and begin setup by loading data\nDescribe the process of going from count matrix to annotated clusters\nExplore distribution of cluster annotations"
  },
  {
    "objectID": "lessons/01_setup_intro_dataset.html#learning-objectives",
    "href": "lessons/01_setup_intro_dataset.html#learning-objectives",
    "title": "Project Setup and Data Exploration",
    "section": "",
    "text": "Introduce the dataset and begin setup by loading data\nDescribe the process of going from count matrix to annotated clusters\nExplore distribution of cluster annotations"
  },
  {
    "objectID": "lessons/01_setup_intro_dataset.html#introduction-to-the-dataset",
    "href": "lessons/01_setup_intro_dataset.html#introduction-to-the-dataset",
    "title": "Project Setup and Data Exploration",
    "section": "Introduction to the dataset",
    "text": "Introduction to the dataset\nFor this workshop, we will be using the single-cell RNA-seq dataset from Shamsi et al (2021). The primary focus of this study was to evaluate the changes in brown adipose tissue (BAT) at different temperatures.\nCells were isolated from stromal vascular fraction of brown adipose tissue. After removal of all hematopoietic lineage-positive cells, 24,498 non-hematopoietic cells were re-clustered and visualisation of the clusters using UMAP identified eight major non-immune cell types present in BAT. This unsupervised clustering of gene expression profiles also revealed heterogeneity within each cell type, illustrated by the presence of multiple distinct clusters for each cell type.\n\n\n\nThe mice used in this study were housed in 4 different temperature conditions: - TN: 30 °C for 1 week - RT: 22 °C - cold2: 5 °C for 2 days - cold7: 5 °C for 7 days\nThere are four replicates per condition, except cold2 which has 3 replicates. This experimental design allowed for adequate comparison of gene expression for each celltype between conditions. For this workshop, we will be using this clustered data set as a starting point to demonstrate various approaches for identifying differentially expressed genes in single cell RNA-seq data.\n\nRaw data\nThe processed dataset is available on GEO (GSE160585) and the raw data is available for download on SRA. We chose to download the filtered counts data and metadata files, and use those to create a Seurat object as our starting point. For more detailed information and code on how to create the object from the GEO files, please see this lesson.\n\n\nRelevant metadata\nIn addition to the counts matrix, we also need to collect information about the data; this is known as metadata. There is often a temptation to just start exploring the data, but it is not very meaningful if we know nothing about the samples that this data originated from.\nSome relevant metadata for our dataset is provided below:\n\nData were generated with the 10x chromium Single Cell 3′ version 3 reagent kit\nSequenced on the NovaSeq S2 flow cell (Illumina, 100 cycles)\nProcessed with Cell Ranger 3.0.1"
  },
  {
    "objectID": "lessons/01_setup_intro_dataset.html#set-up",
    "href": "lessons/01_setup_intro_dataset.html#set-up",
    "title": "Project Setup and Data Exploration",
    "section": "Set up",
    "text": "Set up\nFor this workshop, we will be working within an RStudio project. In order to follow along you should have downloaded the R project.\n\n\n\n\n\n\nTip\n\n\n\nIf you haven’t done this already, the project can be accessed using this link.\n\n\nOnce downloaded, you should see a file called Pseudobulk_workshop.zip on your computer (likely, in your Downloads folder).\n\nUnzip this file. It will result in a folder of the same name.\nMove the folder to the location on your computer where you would like to perform the analysis.\nOpen up the folder. The contents will look like the screenshot below.\nLocate the .Rproj file and double-click on it. This will open up RStudio with the “Pseudobulk_workshop” project loaded."
  },
  {
    "objectID": "lessons/01_setup_intro_dataset.html#project-organization",
    "href": "lessons/01_setup_intro_dataset.html#project-organization",
    "title": "Project Setup and Data Exploration",
    "section": "Project organization",
    "text": "Project organization\nOne of the most important parts of research that involves large amounts of data is how best to manage it. We tend to prioritize the analysis, but there are many other important aspects of data management that are often overlooked in the excitement to get a first look at new data. The HMS Data Management Working Group discusses in-depth some things to consider beyond the data creation and analysis.\nFor each experiment you work on and analyze data for, it is considered best practice to get organized by creating a planned storage space (directory structure). We will do that for our single-cell analysis.\nLook inside your project space and you will find that a directory structure has been set up for you:\nPseudobulk_workshop/\n├── data\n├── meta\n├── results\n└── figures\n\n\n\n\n\n\nNOTE FOR WINDOWS OS users\n\n\n\nWhen you open the project folder after unzipping, please check if you have a data folder with a subfolder also called data. If this is the case, please move all the files from the subfolder into the parent data folder."
  },
  {
    "objectID": "lessons/01_setup_intro_dataset.html#loading-single-cell-rna-seq-count-data",
    "href": "lessons/01_setup_intro_dataset.html#loading-single-cell-rna-seq-count-data",
    "title": "Project Setup and Data Exploration",
    "section": "Loading single-cell RNA-seq count data",
    "text": "Loading single-cell RNA-seq count data\nNext, let’s open a new Rscript file, and start with some comments to indicate what this file is going to contain:\n\n# September 2024\n# HBC Pseduobulk workshop\n\n# Single-cell RNA-seq analysis - metadata\n\nSave the Rscript as metadata.R. Your working directory should look something like this:\nA GIF demonstrating this step is shown below:\n\n\n\n\nLoading libraries\nNext, we can load the necessary libraries:\n\n# Load libraries\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(ggalluvial)\n\n\n\nLoad Seurat object\nWe generated this Seurat object using the files that were deposited to GEO. More details on how this Seurat object was generated are detailed in another lesson, where we provide more clarity on what parameters were used for normalization, integration, and clustering.\nLet’s begin by looking at what metadata is stored inside the Seurat object, paying close attention to sample identities and celltype annotations.\n\n# Load Seurat object\nseurat &lt;- readRDS(\"../data/BAT_GSE160585_final.rds\")\ncolnames(seurat@meta.data)\n\n [1] \"orig.ident\"             \"nCount_RNA\"             \"nFeature_RNA\"          \n [4] \"sample\"                 \"log10GenesPerUMI\"       \"mitoRatio\"             \n [7] \"condition\"              \"S.Score\"                \"G2M.Score\"             \n[10] \"Phase\"                  \"CC.Difference\"          \"nCount_SCT\"            \n[13] \"nFeature_SCT\"           \"integrated_snn_res.1.2\" \"celltype\"              \n[16] \"seurat_clusters\"       \n\n\nA nice way to observe patterns or trends in the data is to visualize it, especially when we are working with such a large number of cells!\n\n\nSample distribution\nRecall from the summary above that we have cells from four different conditions. We can use a barplot to show the number of cells for each replicate, coloring each sample by the temperature condition the mice were subjected to. This provides an overview of the number of cells we are working with for each replicate. This metric is important to bear in mind as we need to ensure that we have enough cells to run future analyses.\n\n# Number of cells per sample\nggplot(seurat@meta.data) +\n    geom_bar(aes(x=sample, fill=condition),\n             stat=\"count\", color=\"black\") +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +\n    labs(x=\"Sample name\", y=\"Number of cells\")\n\n\n\n\nWe can also see the distribution of cells across the UMAP for each replicate and sample. As this dataset has already been processed and integrated, we expect the cells to be integrated together - where there are no cells grouping together due to a batch effect (i.e sample). Instead the cells should be clustered together based upon gene expression similarity, which would ideally lead to celltypes being grouped together.\n\n# UMAPs of condition and sample\nDimPlot(seurat, group.by=c(\"sample\", \"condition\"))\n\n\n\n\n\n\nCelltype annotation\nIntially, cells were clustered at a range of resolutions. The authors chose a resolution 1.2 as it grouped cells adequately into the celltypes of interest.\n\n# UMAP clusters\np &lt;- DimPlot(seurat, group.by=\"seurat_clusters\") + NoLegend()\nLabelClusters(p, id = \"seurat_clusters\",  fontface = \"bold\", \n              size = 5, bg.colour = \"white\", bg.r = .2, force = 0)\n\n\n\n\nUsing these clusters and a variety of marker genes, the cells were annotated into 8 major non-immune cell types:\n\nPdgfra+ adipose progenitors (AP)\nVascular endothelial (ECAP, EC)\nLymphatic endothelial (Lymph)\nVascular smooth muscle cells (VSM)\nPericytes (Pericyte)\nAdipocytes (Adipo)\nMyelinating Schwann cells (Schwann)\nNon-myelinating Schwann cells (Schwann)\n\nNotable marker genes from the paper are represented here using the FeaturePlot() function. Here we can see that indeed the cells are grouping together based upon gene expression and celltype identities.\n\nFeaturePlot(seurat, c(\"Pdgfra\", \"Acta2\", \"Cdh5\", \n                      \"Lyve1\", \"Ucp1\", \"Mpz\"))\n\n\n\n\nThe mapping of cluster to celltypes is being represented here as an alluvial plot. This visualization provides a quick way to see which clusters have been annotated as which celltype.\n\n# Order clusters numerically\norder_cluster &lt;- unique(seurat$seurat_clusters) %&gt;% as.numeric() %&gt;% sort() %&gt;% as.character()\nseurat$seurat_clusters &lt;- factor(seurat$seurat_clusters, levels=order_cluster)\n\n# Map clusters to celltypes\nggplot(seurat@meta.data,\n        aes(axis1 = seurat_clusters,\n            axis2 = celltype,\n            fill = celltype)) +\n    geom_alluvium() +\n    geom_stratum() +\n    geom_text(stat = \"stratum\",\n        aes(label=after_stat(stratum))) +\n    theme_void() +\n    NoLegend() +\n    coord_flip()\n\n\n\n\nWith these updated celltype labels, we can see how they distribute on the UMAP.\n\n# UMAP celltype\nIdents(seurat) &lt;- \"celltype\"\np &lt;- DimPlot(seurat) + NoLegend()\nLabelClusters(p, id = \"ident\",  fontface = \"bold\", size = 4,\n              bg.colour = \"white\", bg.r = .2, force = 0)\n\n\n\n\nWe can even identify celltypes of interest based upon the proportion of cells in each experimental condition.\n\n# Barplot sample proportion by celltype \nggplot(seurat@meta.data) +\n    geom_bar(aes(x=celltype, fill=condition), \n                 position=position_fill(), color=\"black\") +\n    theme_classic() +\n    labs(x=\"Celltype\", y=\"Proportion of cells\")\n\n\n\n\nNow that we have a better understanding of what data we have available to us, we can begin our analysis!"
  },
  {
    "objectID": "lessons/00_counts_to_clusters_overview.html",
    "href": "lessons/00_counts_to_clusters_overview.html",
    "title": "Single-cell RNA-seq: From Counts to Clusters",
    "section": "",
    "text": "Approximate time: 20 minutes"
  },
  {
    "objectID": "lessons/00_counts_to_clusters_overview.html#learning-objectives",
    "href": "lessons/00_counts_to_clusters_overview.html#learning-objectives",
    "title": "Single-cell RNA-seq: From Counts to Clusters",
    "section": "Learning Objectives:",
    "text": "Learning Objectives:\n\nDescribe the workflow for single-cell RNA-seq analysis starting from a count matrix through to annotated celltypes"
  },
  {
    "objectID": "lessons/00_counts_to_clusters_overview.html#filtering-data",
    "href": "lessons/00_counts_to_clusters_overview.html#filtering-data",
    "title": "Single-cell RNA-seq: From Counts to Clusters",
    "section": "Filtering data",
    "text": "Filtering data\nThe first step is to take the raw count data and use various metrics to identify true cells that are of high quality, so that when we cluster our cells it is easier to identify distinct cell type populations. Visualizing metrics with plots allows us to evaluate all samples within a dataset and isolate any problematic samples. Additionally, we can more easily decide on suitable thresholds for cell-level filtering. We want to be able to keep as many high quality cells as possible without removing biologically relevant cell types. Gene-level filtering is also applied at this stage."
  },
  {
    "objectID": "lessons/00_counts_to_clusters_overview.html#clustering-workflow",
    "href": "lessons/00_counts_to_clusters_overview.html#clustering-workflow",
    "title": "Single-cell RNA-seq: From Counts to Clusters",
    "section": "Clustering workflow",
    "text": "Clustering workflow\nFor something to be informative, it needs to exhibit variation, but not all variation is informative. The goal of our clustering analysis is to keep the major sources of variation in our dataset that should define our cell types, while restricting the variation due to uninteresting sources of variation (sequencing depth, cell cycle differences, mitochondrial expression, batch effects, etc.). Then, to determine the cell types present, we will perform a clustering analysis using the most variable genes to define the major sources of variation in the dataset.\nThe workflow for this analysis is adapted from the following sources:\n\nSatija Lab: Seurat v3 Guided Integration Tutorial\nPaul Hoffman: Cell-Cycle Scoring and Regression\n\nTo identify clusters, the following steps are performed:\n\n1. Explore sources of unwanted variation\nThe first step in the workflow is to see if our data contains any unwanted variability. The most common biological effect that is evaluated in single-cell RNA-seq data is the effect of cell cycle on the transcriptome. Another known biological effect is mitochondrial gene expression, which is interpreted as an indication of cell stress. This step of the workflow involves exploring our data to identify which covariates we would like to regress out.\n\n\n\n2. Normalization and regressing out sources of unwanted variation\nNormalization is required to scale the raw count data to obtain correct relative gene expression abundances between cells. The sctransform function implements an advanced normalization and variance stabilization of the data. The sctransform function also regresses out sources of unwanted variation in our data. In the previous step, we had identified these sources of variability, and here we specify what those covariates are.\n\nImage credit: Hafemeister C and Satija R. Normalization and variance stabilization of single-cell RNA-seq data using regularized negative binomial regression, Genom Biology 2019 https://doi.org/10.1101/576827\n\n\n3. Integration\nOften with single cell RNA-seq we are working with multiple samples which correspond to different sample groups, multiple experiments or different modalities. If we want to ultimately compare celltype expression between groups it is recommended to integrate the data. Integration is a powerful method that uses these shared sources of greatest variation to identify shared sub-populations across conditions or datasets (Stuart and Butler et al. (2018)). There are several steps involved in performing intergration in Seurat. Once complete, we use visualization methods to ensure a good integration before we proceed to cluster cells.\n\n\n\n\n\n\n\nNote\n\n\n\nIntegration is optional. We recommend going through the workflow without integration to decide whether or not it is necessary for your data.\n\n\n\n\n4. Clustering cells\nClusters of cells are obtained by grouping cells based on the similarity of their gene expression profiles. Expression profile similarity is determined via distance metrics, which often take dimensionality‐reduced representations as input. Seurat assigns cells to clusters based on their PCA scores derived from the expression of the integrated most variable genes.\n\n\n\n5. Cluster quality evaluation\nThe clusters identified in our data represent groups of cells that presumably belong to a similar cell type. Before we can confirm the celltype of a group of member cells, the following steps are taken:\n\na. Check to see that clusters are not influenced by sources of uninteresting variation.\nb. Check to see whether the major principal components are driving the different clusters.\nc. Explore the cell type identities by looking at the expression for known markers across the clusters."
  },
  {
    "objectID": "lessons/00_counts_to_clusters_overview.html#marker-identification-and-celltype-assignment",
    "href": "lessons/00_counts_to_clusters_overview.html#marker-identification-and-celltype-assignment",
    "title": "Single-cell RNA-seq: From Counts to Clusters",
    "section": "Marker Identification and Celltype Assignment",
    "text": "Marker Identification and Celltype Assignment\nOften the known marker expression evaluation gives us some hints as to which celltype is represented within a cluster, but sometimes it is not so obvious. In situations where there is uncertainty of the cell type assignment it is good practice to check which genes exhibit a high expression profile among cells (i.e FindMarkers). The list of genes can provide insight on celltype and/or can be the impetus for removal of a group of cells. After this step we hope to obtain a fully annotated dataset that we can move forward with for downstream analysis."
  },
  {
    "objectID": "lessons/01b_gen_seurat_object.html",
    "href": "lessons/01b_gen_seurat_object.html",
    "title": "Sample pre-processing",
    "section": "",
    "text": "Approximate time: 15 minutes"
  },
  {
    "objectID": "lessons/01b_gen_seurat_object.html#learning-objectives",
    "href": "lessons/01b_gen_seurat_object.html#learning-objectives",
    "title": "Sample pre-processing",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nUnderstand the steps taken to generate the Seurat object used as input for the workshop."
  },
  {
    "objectID": "lessons/01b_gen_seurat_object.html#sample-data",
    "href": "lessons/01b_gen_seurat_object.html#sample-data",
    "title": "Sample pre-processing",
    "section": "Sample data",
    "text": "Sample data\nFor this workshop, we will be working with a single-cell RNA-seq dataset from Tseng et al, 2021. The data is available on GEO GSE160585. The files we will need to create the fully processed Seurat object include:\n\nMetadata csv file\nCounts matrix\nList of features (genes)\nList of cell barcodes\n\nWe have an entire workshop of materials that go through the whole process step-by-step on how to generate a similarly fully annotated, filtered dataset from single-cell RNA-seq data. In this lesson we provide mostly code, so you can reproduce the object yourself. If you want an in-depth explanation of each step we encourage you to peruse the materials linked above."
  },
  {
    "objectID": "lessons/01b_gen_seurat_object.html#pre-processing-steps",
    "href": "lessons/01b_gen_seurat_object.html#pre-processing-steps",
    "title": "Sample pre-processing",
    "section": "Pre-processing steps",
    "text": "Pre-processing steps\n\nDownload and unzip the dataset from GEO using bash:\n\n\n#!/bin/bash\n\n# Create data directory to store downloaded files\nmkdir -p data/filtered_counts\n\n# Metadata csv file\nwget wget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE160nnn/GSE160585/suppl/GSE160585%5Fmetadata%5Ffor%5Fpseudotime%5Fand%5Fpseudobulk%5FDGE.csv.gz -O data/meta.csv.gz\n\n# Features, barcodes, and counts matrix\nwget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE160nnn/GSE160585/suppl/GSE160585%5Ffiltered%5Fraw%5Fcounts%5Ffor%5Fpseudotime%5Fand%5Fpseudobulk%5FDGE.tar.gz -O data/filtered_counts.tar.gz\n\n# Unzip and decompress the files\ntar -xvf data/filtered_counts.tar.gz -C data/filtered_counts\ngunzip data/meta.csv.gz\n\n\nData wrangling of the metadata\n\n\nlibrary(tidyverse)\nmeta &lt;- read.csv(\"data/meta.csv\", row.names=1)\n\n# Celltype IDs have are formatted like: \n# {celltype}_{cluster}\n# Removing the underscore\nmeta$celltype &lt;- sub(\"_.*\", \"\", meta$cluster_id)\nmeta &lt;- select(meta, -c(cluster_id))\n\n# The following columns in the metadata have duplicate values:\n# - nCount_RNA = nUMI\n# - nFeature_RNA = nGene\nmeta &lt;- select(meta, -c(nUMI, nGene))\n\n# Rename columns for more clarity\nmeta &lt;- meta %&gt;%\n    rename(c(\"orig.ident\"=\"sample\", \"sample\"=\"condition\"))\n\n\n# Removing cluster resolutions that will not be used\ncols &lt;- c(\n    \"integrated_snn_res.0.1\",\n    \"integrated_snn_res.0.4\",\n    \"integrated_snn_res.0.6\",\n    \"integrated_snn_res.0.8\",\n    \"integrated_snn_res.1\",\n    # \"integrated_snn_res.1.2\",\n    \"integrated_snn_res.1.4\",\n    \"integrated_snn_res.1.8\",\n    \"seurat_clusters\"\n)\n\nmeta &lt;- meta %&gt;% select(-c(cols))\n\n# Store clusters IDs as factors\nmeta$seurat_clusters &lt;- meta$integrated_snn_res.1.2\nsorted_cluster &lt;- sort(as.integer(unique(meta$seurat_clusters)))\nmeta$seurat_clusters &lt;- factor(meta$seurat_clusters, levels=sorted_cluster)\n\n\nGenerate Seurat object using downloaded files as input\n\n\nlibrary(Seurat)\nlibrary(Matrix)\nset.seed(1454944673L) # Using the same seed used in the paper\n\n# Load metadata, barcodes, features, and matrix into R\nbarcodes &lt;- read.csv(\"data/filtered_counts/barcodes_filtered_raw_counts_for_pseudotime_and_pseudobulk_DGE.tsv\", header=FALSE)\nfeatures &lt;- read.csv(\"data/filtered_counts/genes_filtered_raw_counts_for_pseudotime_and_pseudobulk_DGE.tsv\", header=FALSE)\ncounts &lt;- readMM(\"data/filtered_counts/filtered_raw_counts_for_pseudotime_and_pseudobulk_DGE.mtx\")\n\n# Add gene and cell barcode information to count matrix\nrow.names(counts) &lt;- features$V1\ncolnames(counts) &lt;- barcodes$V1\n\n# Create seurat object\nseurat &lt;- CreateSeuratObject(\n    counts, \n    project = \"GSE160585\", \n    assay = \"RNA\", \n    meta.data = meta)\n\n\n\n\n\n\n\nNote\n\n\n\nIn the next few steps we have provided the code to process the Seurat object. The parameters for each step were chosen based upon the descriptions provided in the Methods section of the paper.\n\n\n\nLog-normalization and highly variable genes\n\n\n# Log normalization\nseurat &lt;- NormalizeData(seurat)\n\n# Identify the most variable genes\nseurat &lt;- FindVariableFeatures(seurat, \n                     selection.method = \"vst\",\n                     nfeatures = 3000, \n                     verbose = FALSE)\n\n\nSCTransform and regress out cell cycle scores\n\n\n# Split seurat object by sample\nsplit_seurat &lt;- SplitObject(seurat, split.by = \"condition\")\n\n# Allow R to use more memory\noptions(future.globals.maxSize = 4000 * 1024^2)\n\n# Run SCTranform on each sample individually\nfor (i in 1:length(split_seurat)) {\n    # Regress out cell cycle scores\n    split_seurat[[i]] &lt;- SCTransform(split_seurat[[i]], \n                                    vars.to.regress = c(\"S.Score\", \"G2M.Score\"), \n                                    vst.flavor = \"v2\",\n                                    variable.features.n = 3000)\n}\n\n\nCCA integration\n\n\n# Select the most variable features to use for integration\ninteg_features &lt;- SelectIntegrationFeatures(object.list = split_seurat, \n                                            nfeatures = 3000)\n# Prepare the SCT list object for integration\nsplit_seurat &lt;- PrepSCTIntegration(object.list = split_seurat,\n                                    anchor.features = integ_features)\n# Find best buddies - can take a while to run\ninteg_anchors &lt;- FindIntegrationAnchors(object.list = split_seurat,\n                                        normalization.method = \"SCT\",\n                                        anchor.features = integ_features)\n# Integrate across conditions\nseurat_integrated &lt;- IntegrateData(anchorset = integ_anchors, \n                                    normalization.method = \"SCT\")\n\n# Rejoin the layers in the RNA assay that we split earlier\nseurat_integrated[[\"RNA\"]] &lt;- JoinLayers(seurat_integrated[[\"RNA\"]])\n\n\nPCA, nearest neighbors, UMAP\n\n\nseurat_integrated &lt;- RunPCA(seurat_integrated, verbose = FALSE)\nseurat_integrated &lt;- RunUMAP(seurat_integrated, dims = 1:50)\nseurat_integrated &lt;- FindNeighbors(seurat_integrated, dims = 1:50)\n\n\nSave seurat object\n\n\nIdents(seurat_integrated) &lt;- \"condition\"\nDefaultAssay(seurat_integrated) &lt;- \"RNA\"\n\nsaveRDS(seurat_integrated, \"data/BAT_GSE160585.rds\")"
  },
  {
    "objectID": "lessons/schedule.html",
    "href": "lessons/schedule.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "lessons/schedule.html#pre-reading",
    "href": "lessons/schedule.html#pre-reading",
    "title": "",
    "section": "Pre-reading",
    "text": "Pre-reading\n\nIntroduction to scRNA-seq\nscRNA-seq: From sequence reads to count matrix\nscRNA-seq: From counts to clusters\nDownload this project"
  },
  {
    "objectID": "lessons/schedule.html#day-1",
    "href": "lessons/schedule.html#day-1",
    "title": "",
    "section": "Day 1",
    "text": "Day 1\n\n\n\nTime\nTopic\nInstructor\n\n\n\n\n09:30 - 09:45\nWorkshop introduction\nWill\n\n\n09:45 - 10:15\nPre-reading review and Q&A\nAll\n\n\n10:15 - 10:25\nBreak\n\n\n\n10:25 - 11:00\nProject setup and data exploration\nWill\n\n\n11:00 - 11:50\nDifferential expression analysis using FindMarkers()\nNoor\n\n\n11:50 - 12:00\nOverview of self-learning materials and homework submission\nWill\n\n\n\n\nBefore the next class:\nI. Please study the contents and work through all the code within the following lessons:\n\nAggregating counts by celltype using pseudobulk approach\n\n\nClick here for a preview of this lesson\n\n Forming pseudobulk samples is important to perform accurate differential expression analysis. Treating each cell as an independent replicate leads to underestimation of the variance and misleadingly small p-values. Working on the level of pseudobulk ensures reliable statistical tests because the samples correspond to the actual units of replication. In this lesson you will: - Aggregate counts for a given celltype - Demonstrate an efficent way to aggregate counts for multiple celltypes - Use the aggregated counts to create a DESeq2 object for downstream analysis \n\nDE analysis of pseudobulk data using DESeq2\n\n\nClick here for a preview of this lesson\n\n The next step is to take the DESeq2 object and run through the analysis workflow to identify differentially expressed genes. In this lesson you will: - Perform sample level QC\n- Evaluate gene-wise dispersions to evalute model fit - Extract results and understand the statistics generated\n\n\n\nSubmit your work:\n\n\nEach lesson above contains exercises; please go through each of them.\nSubmit your answers to the exercises using this Google form on the day before the next class.\n\n\n\nQuestions?\n\nIf you get stuck due to an error while running code in the lesson, email us"
  },
  {
    "objectID": "lessons/schedule.html#day-2",
    "href": "lessons/schedule.html#day-2",
    "title": "",
    "section": "Day 2",
    "text": "Day 2\n\n\n\nTime\nTopic\nInstructor\n\n\n\n\n09:30 - 10:00\nSelf-learning lessons discussion\nAll\n\n\n10:00 - 10:40\nVisualization of differentially expressed genes\nWill\n\n\n10:40 - 10:50\nBreak\n\n\n\n10:50 - 12:00\nComparison of results from different DE approaches\nNoor\n\n\n\n\nBefore the next class:\nI. Please study the contents and work through all the code within the following lessons: 1. Functional Analysis\n\n\nClick here for a preview of this lesson\n\nNow that we have significant genes, let’s gain some biological insight In this lesson, we will: - Discuss approaches for functional analysis - Use clusterProfiler to run over-representation analsyis and visualize results - Use clusterProfiler to run GSEA \n\n\nSubmit your work:\n\n\nEach lesson above contains exercises; please go through each of them.\nSubmit your answers to the exercises using this Google form on the day before the next class.\n\n\n\nQuestions?\n\nIf you get stuck due to an error while running code in the lesson, email us"
  },
  {
    "objectID": "lessons/schedule.html#day-3",
    "href": "lessons/schedule.html#day-3",
    "title": "",
    "section": "Day 3",
    "text": "Day 3\n\n\n\nTime\nTopic\nInstructor\n\n\n\n\n09:30 - 10:15\nSelf-learning lessons discussion\nAll\n\n\n10:15 - 11:15\nMethods for Differental Abundance\nNoor\n\n\n11:15 - 11:20\nBreak\n\n\n\n11:25 - 11:45\nDiscussion and Q&A\nAll\n\n\n11:45 - 12:00\nWrap-up\nWill"
  },
  {
    "objectID": "lessons/schedule.html#answer-keys",
    "href": "lessons/schedule.html#answer-keys",
    "title": "",
    "section": "Answer Keys",
    "text": "Answer Keys\n\nDay 1 exercises\nDay 2 exercises"
  },
  {
    "objectID": "lessons/schedule.html#resources",
    "href": "lessons/schedule.html#resources",
    "title": "",
    "section": "Resources",
    "text": "Resources"
  }
]